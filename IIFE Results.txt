//IIFE
//a. Print odd numbers in an array:

var oddNumbers = (function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] % 2 !== 0) {
            result.push(arr[i]);
        }
    }
    return result;
})([1, 2, 3, 4, 5, 6, 7, 8, 9]);
console.log(oddNumbers);


//b.	Convert all the strings to title caps in a string array - 
(function(arr) {
    for (var i = 0; i < arr.length; i++) {
        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);
    }
    console.log(arr);
})(["apple", "banana", "cherry"]);

// c.	Sum of all numbers in an array 

var sum = (function(arr) {
    var result = 0;
    for (var i = 0; i < arr.length; i++) {
        result += arr[i];
    }
    return result;
})([1, 2, 3, 4, 5]);
console.log(sum);


// d.	Return all the prime numbers in an array 

(function() {
    // Replace this array with your own array of numbers
    var numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31];
  
    // Function to check if a number is prime
    function isPrime(num) {
      if (num <= 1) return false;
      for (var i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) {
          return false;
        }
      }
      return true;
    }
  
    // Filter prime numbers from the array using the isPrime function
    var primeNumbers = numbers.filter(function(num) {
      return isPrime(num);
    });
  
    // Display the prime numbers
    console.log("Prime Numbers:", primeNumbers);
  })();
  

// e.	Return all the palindromes in an array 

var palindromes = (function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        if (isPalindrome(arr[i])) {
            result.push(arr[i]);
        }
    }
    return result;
})(["level", "hello", "radar", "world"]);

function isPalindrome(str) {
    return str === str.split('').reverse().join('');
}

console.log(palindromes);


// f.	Return median of two sorted arrays of the same size. 
var median = ((arr1, arr2) => {
    var mergedArr = arr1.concat(arr2).sort((a, b) => a - b);
    var len = mergedArr.length;
    return len % 2 === 0 ? (mergedArr[len / 2 - 1] + mergedArr[len / 2]) / 2 : mergedArr[Math.floor(len / 2)];
})([1, 3, 5], [2, 4, 6]);

console.log(median);


// g.	Remove duplicates from an array

var uniqueArray = (function(arr) {
    return arr.filter(function(value, index, self) {
        return self.indexOf(value) === index;
    });
})([1, 2, 2, 3, 4, 4, 5]);

console.log(uniqueArray);


// h.	Rotate an array by k times â€“ 

var rotatedArray = (function(arr, k) {
    for (var i = 0; i < k; i++) {
        arr.unshift(arr.pop());
    }
    return arr;
})([1, 2, 3, 4, 5], 2);

console.log(rotatedArray);

